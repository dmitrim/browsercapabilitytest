class GcComponent extends HTMLElement{constructor(){super(),this._cache={events:{}}}$(t){return this.querySelector(t)}$$(t){return this.querySelectorAll(t)}fireEvent(t,e,s=!0){const i=JSON.stringify(arguments);if(!(i in this._cache.events)){const o={bubbles:s};e instanceof Object&&(o.detail=e),this._cache.events[i]=new CustomEvent(t,o)}this.dispatchEvent(this._cache.events[i])}loadScript(t,e){console.log(`Loading ${t}`);var s=document.getElementsByTagName("head")[0],i=document.createElement("script");i.type="text/javascript",i.src=t,i.onload=e,s.appendChild(i)}guid(){function t(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return t()+t()+"-"+t()+"-"+t()+"-"+t()+"-"+t()+t()+t()}get is(){return this.localName}}class GcPdfViewer extends GcComponent{constructor(){super(),this.pdfjsLib=window["pdfjs-dist/build/pdf"],this.pdfjsLib?(this.shadow=this,this.cssStyle="",this.shadow.innerHTML=`<style>${this.cssStyle}</style>`,this.shadow.innerHTML='<canvas class="the-canvas"></canvas>',this.theCanvas=this.getElementsByClassName("the-canvas")[0]):console.error("pdfjsLib not found")}loadPage(t){this.pdfdoc.getPage(t).then(e=>{console.log("Page loaded");var s=e.getViewport(1.5),i=this.theCanvas.getContext("2d");this.theCanvas.height=s.height,this.theCanvas.width=s.width;var o={canvasContext:i,viewport:s};e.render(o).then(()=>{console.log("Page rendered"),this._loadingLock=!1,this.fireEvent("pagerendered",t)})})}loadFromUrl(t){if(this.pdfdoc=null,this.pdfjsLib)if(this._loadingLock)console.log("already laoading..");else{this._loadingLock=!0,this.pdfUrl=t;var e=pdfjsLib.getDocument(this.pdfUrl);console.log("Loading pdf..."),e.promise.then(t=>{try{this.pdfdoc=t,console.log("in promise.....");let s=this.offsetHeight,i=this.offsetWidth;const o=window.getComputedStyle(this,null).getPropertyValue("height");o&&(s=1*o),this.fireEvent("documentload"),console.log(`PDF loaded ${s} ${i}, computed css: ${window.getComputedStyle(this,null).cssText}`);var e=this.pagenum;this.loadPage(e)}catch(t){this._loadingLock=!1,console.log(`Error: ${t}`)}},t=>{this._loadingLock=!1,console.error(t)})}else console.error("pdfjsLib not found")}get src(){return this.getAttribute("src")}set src(t){t?this.setAttribute("src",t):this.removeAttribute("src")}get pagenum(){if(!this.getAttribute("pagenum"))return 1}set pagenum(t){this.setAttribute("pagenum",t)}attributeChangedCallback(t,e,s){switch(console.log(`attributeChangedCallback ${t} newVal: ${s}`),t){case"src":this.loadFromUrl(s);break;case"pagenum":this.loadPage(1*s)}}static get observedAttributes(){return["src","pagenum"]}}customElements.define("gc-pdfviewer",GcPdfViewer);class XTimer extends GcComponent{constructor(){super(),this.makeShadowRoot()}start(){window.clearInterval(this.interval),this.iteration(),this.interval=window.setInterval(()=>this.iteration(),1e3)}stop(){clearInterval(this.interval),this.dispatchEvent(new CustomEvent("x-timer.ended",{bubbles:!0}))}iteration(){this.displayTime(),this._timeLeft--,this._timeLeft<0&&this.stop()}displayTime(){const t=XTimer.time2hms(this._timeLeft);this.shadowRoot.$(".value-hours").textContent=t.hours,this.shadowRoot.$(".value-minutes").textContent=t.minutes,this.shadowRoot.$(".value-seconds").textContent=t.seconds}attributeChangedCallback(t,e,s){const i=parseInt(s,10);this._timeLeft=i>0?i:0,this.start()}get time(){return this.getAttribute("time")}static get observedAttributes(){return["time"]}static time2hms(t){const e=Math.floor(t/3600);t-=3600*e;const s=Math.floor(t/60);return{hours:e,minutes:s,seconds:t-=60*s}}}