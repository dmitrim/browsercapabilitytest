class GcComponent extends HTMLElement{constructor(){super(),this._cache={events:{}}}$(t){return this.querySelector(t)}$$(t){return this.querySelectorAll(t)}fireEvent(t,e,s=!0){const o=JSON.stringify(arguments);if(!(o in this._cache.events)){const i={bubbles:s};e instanceof Object&&(i.detail=e),this._cache.events[o]=new CustomEvent(t,i)}this.dispatchEvent(this._cache.events[o])}loadScript(t,e){console.log(`Loading ${t}`);var s=document.getElementsByTagName("head")[0],o=document.createElement("script");o.type="text/javascript",o.src=t,o.onload=e,s.appendChild(o)}guid(){function t(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return t()+t()+"-"+t()+"-"+t()+"-"+t()+"-"+t()+t()+t()}makeShadow(t={}){"ShadyCSS"in window&&ShadyCSS.styleElement(this),-1!=window.customElements.toString().indexOf("CustomElementRegistry")?(console.log("Good browser, use Shadow DOM"),this.attachShadow({mode:"open"})):(console.log("Not good browser, don't use Shadow DOM"),this.shadowRoot=this),this.shadowRoot.$=(t=>this.shadowRoot.querySelector(t)),this.shadowRoot.$$=(t=>new CustomNodeList(this.shadowRoot.querySelectorAll(t)))}get is(){return this.localName}}class GcPdfViewer extends GcComponent{constructor(){if(super(),this.pdfjsLib=window["pdfjs-dist/build/pdf"],this.cssStyle="",this.makeShadow(),this.messages={"not-supported-message":this.getAttribute("not-supported-message")||"No pdf support","not-supported-link-message":this.getAttribute("not-supported-link-message")||"Click here to download file"},!this.pdfjsLib)return console.error("pdfjsLib not found"),void(this.shadowRoot.innerHTML=`${this.messages["not-supported-message"]}<a src='${this.file}'>${this.messages["not-supported-link-message"]}`);this.shadowRoot.innerHTML=`<style>${this.cssStyle}</style><canvas class="the-canvas"></canvas>`,this.theStyle=this.shadowRoot.$("style"),this.theCanvas=this.shadowRoot.$(".the-canvas"),console.log(`this.theStyle=${this.theStyle} this.theCanvas=${this.theCanvas}`)}loadPage(t){this.pdfdoc.getPage(t).then(e=>{var s=e.getViewport(1),o=this.theCanvas.getContext("2d");this.theCanvas.height=s.height,this.theCanvas.width=s.width;var i={canvasContext:o,viewport:s};e.render(i).then(()=>{console.log("Page rendered"),this._loadingLock=!1,this.fireEvent("pagerendered",t)})})}loadFromUrl(t){(this.pdfdoc=null,this.pdfjsLib)?this._loadingLock?console.log("already laoading.."):(this._loadingLock=!0,this.pdfUrl=t,this.pdfjsLib.getDocument(this.pdfUrl).promise.then(t=>{try{this.pdfdoc=t;let s=this.offsetHeight;this.offsetWidth;const o=window.getComputedStyle(this,null).getPropertyValue("height");o&&(s=1*o),this.fireEvent("documentload");var e=this.pagenum;this.loadPage(e)}catch(t){this._loadingLock=!1,console.log(`Error: ${t}`)}},t=>{this._loadingLock=!1,console.error(t)})):console.error("pdfjsLib not found")}get file(){return this.getAttribute("file")}set file(t){t?this.setAttribute("file",t):this.removeAttribute("file")}get pagenum(){if(!this.getAttribute("pagenum"))return 1}set pagenum(t){this.setAttribute("pagenum",t)}attributeChangedCallback(t,e,s){switch(t){case"file":this.loadFromUrl(s);break;case"pagenum":this.loadPage(1*s)}}static get observedAttributes(){return["file","pagenum"]}}customElements.define("gc-pdfviewer",GcPdfViewer);