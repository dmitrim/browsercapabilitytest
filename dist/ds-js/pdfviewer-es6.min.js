class GcComponent extends HTMLElement{constructor(){super(),this.id=this.id||this.guid(),this._cache={events:{}},this.useNativeShadow=window.customElements.toString().includes("CustomElementRegistry"),this.useNativeShadow?this.shadowSelector=":host":this.shadowSelector=`#${this.id}`}$(t){return this.querySelector(t)}$$(t){return this.querySelectorAll(t)}fireEvent(t,e,s=!0){console.log(`fireEvent, eventName: ${t}`);const i=JSON.stringify(arguments);if(!(i in this._cache.events)){const o={bubbles:s};e instanceof Object&&(o.detail=e),this._cache.events[i]=new CustomEvent(t,o)}this.dispatchEvent(this._cache.events[i])}loadScript(t,e){console.log(`Loading ${t}`);var s=document.getElementsByTagName("head")[0],i=document.createElement("script");i.type="text/javascript",i.src=t,i.onload=e,s.appendChild(i)}guid(){function t(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return`c${t()}${t()}${t()}${t()}${t()}${t()}${t()}${t()}`}makeShadow(t={}){this.useNativeShadow?this.attachShadow({mode:"open"}):this.shadowRoot=this,this.shadowRoot.$=(t=>this.shadowRoot.querySelector(t)),this.shadowRoot.$$=(t=>new CustomNodeList(this.shadowRoot.querySelectorAll(t)))}}!function(){class t extends GcComponent{constructor(){super(),console.log("GcPdfViewerToolbar constructor");const t=`${this.shadowSelector} .toolbar{width:100%;height: 45px; line-height: 45px; overflow:hidden; background:gray; color: white;} ${this.shadowSelector} button{cursor:pointer;} ${this.shadowSelector} .pageselector { float: right; } ${this.shadowSelector} span.spacer-left {width: 20px;height:1px;float:left;} ${this.shadowSelector} span.spacer-right {width: 20px;height:1px;float:right;}`;this.makeShadow(),this.shadowRoot.innerHTML=`<style>${t}</style>\n            <div class="toolbar">\n                    <span class="spacer-left"></span>\n                    <span class="title" title="This is a test PDF file">\n                        <span>This is a test PDF file</span>\n                    </span>\n                    <span class="spacer-right"></span>\n                    <span class="pageselector">\n                        <span class="currentpage">0</span><span>/</span><span class="pagescount">1</span>\n                    </span>\n                    \n                    <span class="buttons" class="">\n                        <paper-icon-button class="rotate-right" icon="pdf:rotate-right" role="button" tabindex="0" aria-disabled="false" title="Rotate clockwise" aria-label="Rotate clockwise">\n                        </paper-icon-button>\n                    </span>\n                \n            </div>`,this.theStyle=this.shadowRoot.$("style"),this.theTitle=this.shadowRoot.$(".title"),this.theTitle.innerHTML="",this.theToolbar=this.shadowRoot.$(".toolbar"),this.elementCurrentPage=this.shadowRoot.$(".currentpage"),this.elementPagesCount=this.shadowRoot.$(".pagescount")}get title(){return this.getAttribute("title")}set title(t){t?this.setAttribute("title",t):this.removeAttribute("title")}get currentpage(){if(!this.getAttribute("currentpage"))return 1}set currentpage(t){this.setAttribute("currentpage",t)}get pagescount(){if(!this.getAttribute("pagescount"))return 0}set pagescount(t){this.setAttribute("pagescount",t)}get width(){return this.getAttribute("width")}set width(t){t?this.setAttribute("width",t):this.removeAttribute("width")}get height(){return this.getAttribute("height")}set height(t){t?this.setAttribute("height",t):this.removeAttribute("height")}get pdfviewer(){if(!this.getAttribute("pdfviewer"))return null}set pdfviewer(t){this.setAttribute("pdfviewer",t)}attributeChangedCallback(t,e,s){switch(console.log(`(toolbar)attributeChangedCallback ${t} oldVal: ${e} newVal: ${s}`),t){case"pdfviewer":owner=s;break;case"currentpage":this.elementCurrentPage.innerHTML=s;case"pagescount":this.elementPagesCount.innerHTML=s;case"title":this.theTitle.innerHTML=s;break;case"width":this.theToolbar.style.width=s}}static get observedAttributes(){return["pdfviewer","currentpage","pagescount","title","width"]}}customElements.whenDefined("gc-pdfviewer").then(()=>{console.log("whenDefined gc-pdfviewer"),customElements.define("gc-pdfviewer-toolbar",t)})}(),function(){class t extends GcComponent{constructor(){super(),this.pdfjsLib=window["pdfjs-dist/build/pdf"];const t=`${this.shadowSelector} .scrollview{width:${this.getAttribute("width")||"100%"};height:${this.getAttribute("height")||"400px"};overflow:auto;} \n${this.shadowSelector} canvas{cursor:pointer;} `;if(this.makeShadow(),this.messages={"not-supported-message":this.getAttribute("not-supported-message")||"No pdf support","not-supported-link-message":this.getAttribute("not-supported-link-message")||"Click here to download file"},!this.pdfjsLib)return console.error("pdfjsLib not found"),void(this.shadowRoot.innerHTML=`${this.messages["not-supported-message"]}<a src='${this.file}'>${this.messages["not-supported-link-message"]}`);this.shadowRoot.innerHTML=`<style>${t}</style><gc-pdfviewer-toolbar></gc-pdfviewer-toolbar><div class="scrollview"><canvas></canvas></div>`,this.theStyle=this.shadowRoot.$("style"),this.theCanvas=this.shadowRoot.$("canvas"),this.theScrollView=this.shadowRoot.$(".scrollview"),this.toolbar=this.shadowRoot.$("gc-pdfviewer-toolbar"),window.GrabToPan&&(this.theScrollView.style.cursor="pointer",this.grabToPan=new window.GrabToPan({element:this.theScrollView}),this.grabToPan.activate()),console.log(`this.theStyle=${this.theStyle} this.theCanvas=${this.theCanvas}`)}loadPage(t){console.log(`loadPage ${t}`),this.pdfdoc.getPage(t).then(e=>{this.updateToolbar();var s=e.getViewport(1),i=this.theCanvas.getContext("2d");this.theCanvas.height=s.height,this.theCanvas.width=s.width;var o={canvasContext:i,viewport:s};e.render(o).then(()=>{console.log("Page rendered"),this._loadingLock=!1,this.fireEvent("pagerendered",t)})})}loadFromUrl(t){(this.pdfdoc=null,this.pdfjsLib)?this._loadingLock?console.log("already laoading.."):(this._loadingLock=!0,this.pdfUrl=t,this.pdfjsLib.getDocument(this.pdfUrl).promise.then(t=>{try{this.pdfdoc=t,this.updateToolbar(),this.loadPage(this.pagenum),this.fireEvent("documentload")}catch(t){this._loadingLock=!1,console.log(`Error: ${t}`)}},t=>{this._loadingLock=!1,console.error(`PDF loading error: ${t}`)})):console.error("pdfjsLib not found")}updateToolbar(){console.log(`---\x3eupdateToolbar ${this.toolbar}`),this.toolbar.width=this.theScrollView.style.width,this.pdfdoc.getMetadata().then(({info:t={Title:Title,Author:Author,Subject:Subject,Keywords:Keywords,Creator:Creator,Producer:Producer,PDFFormatVersion:PDFFormatVersion},metadata:e={},contentDispositionFilename:s}={})=>{this.toolbar.title=t.Title||this.pdfUrl}).catch(t=>{console.error(`getMetadata error: ${t}`)}),this.toolbar.currentpage=this.pagenum,this.toolbar.pagescount=this.pdfdoc.numPages}get pagesCache(){return this.pagesCache||(this.pagesCache=new e),this.pagesCache}get width(){return this.getAttribute("width")}set width(t){t?this.setAttribute("width",t):this.removeAttribute("width")}get height(){return this.getAttribute("height")}set height(t){t?this.setAttribute("height",t):this.removeAttribute("height")}get file(){return this.getAttribute("file")}set file(t){t?this.setAttribute("file",t):this.removeAttribute("file")}get pagenum(){const t=this.getAttribute("pagenum");return t||1}set pagenum(t){this.setAttribute("pagenum",t)}attributeChangedCallback(t,e,s){switch(console.log(`attributeChangedCallback ${t} oldVal: ${e} newVal: ${s}`),t){case"file":this.loadFromUrl(s);break;case"pagenum":this.loadPage(1*s);break;case"width":this.theScrollView.style.width=s}}static get observedAttributes(){return["file","pagenum","width","height"]}}class e{constructor(){console.log("GcPagesCache constructor.")}}customElements.define("gc-pdfviewer",t),console.log("typeof GcPdfViewer: "+typeof t)}();